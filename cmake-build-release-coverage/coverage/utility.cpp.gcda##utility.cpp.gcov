        -:    0:Source:C:/Users/IscG/Documents/Programming/epq/src/utility.cpp
        -:    0:Graph:C:\Users\IscG\Documents\Programming\epq\cmake-build-release-coverage\CMakeFiles\epq.dir\src\utility.cpp.gcno
        -:    0:Data:C:\Users\IscG\Documents\Programming\epq\cmake-build-release-coverage\CMakeFiles\epq.dir\src\utility.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by IscG on 10/01/2022.
        -:    3://
        -:    4:
        -:    5:#include "utility.h"
        -:    6:#ifdef DEBUG
        -:    7:#include <cstdio>
        -:    8:#endif
        -:    9:
        -:   10:static unsigned long x = 12345689, y = 362436069, z = 521288629;
function _Z8xorshf96v called 0 returned 0% blocks executed 0%
    #####:   11:unsigned long xorshf96() {
        -:   12:    unsigned long t;
 5380698*:   13:    x ^= x << 16;
 5380698*:   14:    x ^= x >> 5;
 5380698*:   15:    x ^= x << 1;
        -:   16:    t = x;
 5380698*:   17:    x = y;
 5380698*:   18:    y = z;
 5380698*:   19:    z = t ^ x ^ y;
    #####:   20:    return z;
        -:   21:}
        -:   22:
function _Z11randintegeri called 1739691 returned 100% blocks executed 100%
  1739691:   23:int randinteger(int x) {
  3623518:   24:    return static_cast<int>(xorshf96()%static_cast<unsigned long>(x));
        -:   25:}
        -:   26:
function _Z8randrealv called 1757180 returned 100% blocks executed 100%
  1757180:   27:double randreal() {
  1757180:   28:    return static_cast<double>(static_cast<long double>(xorshf96())/static_cast<long double>(ULONG_MAX));
        -:   29:}
        -:   30:
function _Z12randomlyPairii called 200000 returned 100% blocks executed 78%
   200000:   31:std::vector<std::pair<int, int>> randomlyPair(int n, int k) {
   200000:   31-block  0
call    0 returned 200000
branch  1 taken 200000 (fallthrough)
branch  2 taken 0 (throw)
        -:   32:    std::vector<std::pair<int, int>> pairs;
   200000:   33:    std::vector<int> availablePlayers(n);
   200000:   33-block  0
call    0 returned 200000
branch  1 taken 200000 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   33-block  1
branch  3 never executed
branch  4 never executed
  2200000:   34:    for (int i = 0; i < n; i++) availablePlayers[i] = i;
   200000:   34-block  0
  2000000:   34-block  1
  2200000:   34-block  2
branch  0 taken 2000000
branch  1 taken 200000 (fallthrough)
        -:   35:    std::vector<int> availablePairs{};
        -:   36:
        -:   37:    int idx1, idx2, p1, p2, det, candidate, nPlayers;
        -:   38:    // Vertex i is connected to vertices (i+j)%n and (i-j)%n for 1 <= j <= k
  1205233:   39:    while (availablePlayers.size() > 1) {
  1205233:   39-block  0
branch  0 taken 1005233
branch  1 taken 200000 (fallthrough)
  1005233:   40:        nPlayers = availablePlayers.size();
        -:   41:
        -:   42:#ifdef DEBUG
        -:   43:        printf("1: %d\n", nPlayers);
        -:   44:#endif
        -:   45:        // Select a random player not already assigned
        -:   46:        idx1 = randinteger(nPlayers);
  1005233:   47:        p1 = availablePlayers[idx1];
  1005233:   47-block  0
branch  0 taken 760597 (fallthrough)
branch  1 taken 244636
        -:   48:        // Determine which pairs are possible
        -:   49:        availablePairs.clear();
  2010466:   50:        for (int i = 1; i <= k; i++) {
  1005233:   50-block  0
  2010466:   50-block  1
branch  0 taken 1005233
branch  1 taken 1005233 (fallthrough)
  1005233:   51:            candidate = (idx1+i)%nPlayers;
  1005233:   52:            det = availablePlayers[candidate] - p1;
  1005233:   52-block  0
branch  0 taken 381115 (fallthrough)
branch  1 taken 624118
  1005233:   53:            if (k >= det && det > 0 || det < 0 && det+n <= k)
  1005233:   53-block  0
branch  0 taken 381115 (fallthrough)
branch  1 taken 624118
   381115:   53-block  1
branch  2 taken 223843 (fallthrough)
branch  3 taken 157272
   223843:   53-block  2
branch  4 taken 69482 (fallthrough)
branch  5 taken 154361
   693600:   54:                availablePairs.push_back(candidate);
   693600:   54-block  0
call    0 returned 693600
branch  1 taken 693600 (fallthrough)
branch  2 taken 0 (throw)
  1005233:   55:            candidate = (idx1-i)%nPlayers;
  1229560:   56:            while (candidate < 0) candidate += nPlayers;
  1005233:   56-block  0
   224327:   56-block  1
  1229560:   56-block  2
branch  0 taken 224327
branch  1 taken 1005233 (fallthrough)
  1005233:   57:            det = p1 - availablePlayers[candidate];
  1005233:   57-block  0
branch  0 taken 381269 (fallthrough)
branch  1 taken 623964
  1005233:   58:            if (k >= det && det > 0 || det < 0 && det+n <= k)
  1005233:   58-block  0
branch  0 taken 381269 (fallthrough)
branch  1 taken 623964
   381269:   58-block  1
branch  2 taken 224327 (fallthrough)
branch  3 taken 156942
   224327:   58-block  2
branch  4 taken 69323 (fallthrough)
branch  5 taken 155004
   693287:   59:                availablePairs.push_back(candidate);
   693287:   59-block  0
call    0 returned 693287
branch  1 taken 693287 (fallthrough)
branch  2 taken 0 (throw)
        -:   60:        }
        -:   61:
        -:   62:#ifdef DEBUG
        -:   63:        printf("2\n");
        -:   64:#endif
  1005233:   65:        if (availablePairs.empty()) {
  1005233:   65-block  0
branch  0 taken 126639 (fallthrough)
branch  1 taken 878594
        -:   66:            availablePlayers.erase(availablePlayers.begin()+idx1);
        -:   67:        } else {
   878594:   68:            idx2 = availablePairs[randinteger(availablePairs.size())];
   878594:   68-block  0
call    0 returned 878594
   878594:   69:            p2 = availablePlayers[idx2];
   878594:   69-block  0
call    0 returned 878594
        -:   70:#ifdef DEBUG
        -:   71:            printf("3: %d\n", idx2);
        -:   72:#endif
        -:   73:            availablePlayers.erase(availablePlayers.begin()+idx1);
   878594:   74:            availablePlayers.erase(availablePlayers.begin()+(idx2 > idx1 ? idx2-1 : idx2));
branch  0 taken 439089 (fallthrough)
branch  1 taken 439505
   439089:   74-block  0
   439505:   74-block  1
        -:   75:#ifdef DEBUG
        -:   76:            printf("4: %d, %d\n", p1, p2);
        -:   77:#endif
   878594:   78:            pairs.emplace_back(p1, p2);
call    0 returned 878594
branch  1 taken 878594 (fallthrough)
branch  2 taken 0 (throw)
        -:   79:        }
        -:   80:    }
   200000:   81:    return pairs;
   200000:   81-block  0
        -:   82:}
        -:   83:
function _Z7displayii called 0 returned 0% blocks executed 0%
    #####:   84:void display(int n, int k) {
    #####:   85:    printf("\n%d, %d: \n", n, k);
    %%%%%:   85-block  0
call    0 never executed
    #####:   86:    for (auto& p : randomlyPair(n, k)) {
call    0 never executed
    %%%%%:   86-block  0
branch  1 never executed
branch  2 never executed
    #####:   87:        printf("%d, %d\n", p.first, p.second);
    %%%%%:   87-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   88:    }
    #####:   89:}
    %%%%%:   89-block  0
        -:   90:
